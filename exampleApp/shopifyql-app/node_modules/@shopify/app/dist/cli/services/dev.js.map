{"version":3,"file":"dev.js","sourceRoot":"","sources":["../../../src/cli/services/dev.ts"],"names":[],"mappings":"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","sourcesContent":["import {ensureDevEnvironment} from './environment.js'\nimport {generateURL, updateURLs} from './dev/urls.js'\nimport {installAppDependencies} from './dependencies.js'\nimport {devExtensions} from './dev/extension.js'\nimport {outputAppURL, outputExtensionsMessages} from './dev/output.js'\nimport {\n  ReverseHTTPProxyTarget,\n  runConcurrentHTTPProcessesAndPathForwardTraffic,\n} from '../utilities/app/http-reverse-proxy.js'\nimport {App, AppConfiguration, UIExtension, Web, WebType} from '../models/app/app.js'\nimport {fetchProductVariant} from '../utilities/extensions/fetch-product-variant.js'\nimport {error, analytics, output, port, system, session} from '@shopify/cli-kit'\nimport {Config} from '@oclif/core'\nimport {Writable} from 'node:stream'\n\nexport interface DevOptions {\n  app: App\n  apiKey?: string\n  storeFqdn?: string\n  reset: boolean\n  update: boolean\n  commandConfig: Config\n  skipDependenciesInstallation: boolean\n  subscriptionProductUrl?: string\n  checkoutCartUrl?: string\n  tunnelUrl?: string\n}\n\ninterface DevWebOptions {\n  backendPort: number\n  apiKey: string\n  apiSecret?: string\n  hostname?: string\n  scopes?: AppConfiguration['scopes']\n}\n\nasync function dev(options: DevOptions) {\n  if (!options.skipDependenciesInstallation) {\n    // eslint-disable-next-line no-param-reassign\n    options = {\n      ...options,\n      app: await installAppDependencies(options.app),\n    }\n  }\n  const token = await session.ensureAuthenticatedPartners()\n  const {\n    identifiers,\n    storeFqdn,\n    app: {apiSecret},\n  } = await ensureDevEnvironment(options, token)\n\n  let proxyPort: number\n  let url: string\n  if (options.tunnelUrl) {\n    const matches = options.tunnelUrl.match(/(https:\\/\\/[^:]+):([0-9]+)/)\n    if (!matches) {\n      throw new error.Abort(`Invalid tunnel URL: ${options.tunnelUrl}`, 'Valid format: \"https://my-tunnel-url:port\"')\n    }\n    proxyPort = Number(matches[2])\n    url = matches[1]\n  } else {\n    proxyPort = await port.getRandomPort()\n    url = await generateURL(options.commandConfig.plugins, proxyPort)\n  }\n\n  const backendPort = await port.getRandomPort()\n\n  const frontendConfig = options.app.webs.find(({configuration}) => configuration.type === WebType.Frontend)\n  const backendConfig = options.app.webs.find(({configuration}) => configuration.type === WebType.Backend)\n\n  /** If the app doesn't have web/ the link message is not necessary */\n  if (frontendConfig || backendConfig) {\n    if (options.update) await updateURLs(identifiers.app, url, token)\n    outputAppURL(options.update, storeFqdn, url)\n  }\n\n  // If we have a real UUID for an extension, use that instead of a random one\n  options.app.extensions.ui.forEach((ext) => (ext.devUUID = identifiers.extensions[ext.localIdentifier] ?? ext.devUUID))\n\n  outputExtensionsMessages(options.app, storeFqdn, url)\n\n  const backendOptions = {\n    apiKey: identifiers.app,\n    backendPort,\n    scopes: options.app.configuration.scopes,\n    apiSecret: (apiSecret as string) ?? '',\n    hostname: url,\n  }\n\n  const proxyTargets: ReverseHTTPProxyTarget[] = []\n  if (options.app.extensions.ui.length > 0) {\n    const devExt = await devExtensionsTarget(\n      options.app,\n      identifiers.app,\n      url,\n      storeFqdn,\n      options.subscriptionProductUrl,\n      options.checkoutCartUrl,\n    )\n    proxyTargets.push(devExt)\n  }\n  if (frontendConfig) {\n    const devFrontend = devFrontendTarget({\n      web: frontendConfig,\n      apiKey: identifiers.app,\n      scopes: options.app.configuration.scopes,\n      apiSecret: (apiSecret as string) ?? '',\n      hostname: url,\n      backendPort,\n    })\n    proxyTargets.push(devFrontend)\n  }\n\n  const additionalProcesses: output.OutputProcess[] = []\n  if (backendConfig) {\n    additionalProcesses.push(devBackendTarget(backendConfig, backendOptions))\n  }\n  await analytics.reportEvent()\n\n  await runConcurrentHTTPProcessesAndPathForwardTraffic(url, proxyPort, proxyTargets, additionalProcesses)\n}\n\ninterface DevFrontendTargetOptions extends DevWebOptions {\n  web: Web\n  backendPort: number\n}\n\nfunction devFrontendTarget(options: DevFrontendTargetOptions): ReverseHTTPProxyTarget {\n  const {commands} = options.web.configuration\n  const [cmd, ...args] = commands.dev.split(' ')\n  const env = {\n    SHOPIFY_API_KEY: options.apiKey,\n    SHOPIFY_API_SECRET: options.apiSecret,\n    HOST: options.hostname,\n    SCOPES: options.scopes,\n    BACKEND_PORT: `${options.backendPort}`,\n    NODE_ENV: `development`,\n  }\n\n  return {\n    logPrefix: options.web.configuration.type,\n    action: async (stdout: Writable, stderr: Writable, signal: error.AbortSignal, port: number) => {\n      await system.exec(cmd, args, {\n        cwd: options.web.directory,\n        stdout,\n        stderr,\n        env: {\n          ...process.env,\n          ...env,\n          PORT: `${port}`,\n          FRONTEND_PORT: `${port}`,\n          APP_URL: options.hostname,\n          APP_ENV: 'development',\n          // Note: These are Laravel varaibles for backwards compatibility with 2.0 templates.\n          SERVER_PORT: `${port}`,\n        },\n        signal,\n      })\n    },\n  }\n}\n\nfunction devBackendTarget(web: Web, options: DevWebOptions): output.OutputProcess {\n  const {commands} = web.configuration\n  const [cmd, ...args] = commands.dev.split(' ')\n  const env = {\n    SHOPIFY_API_KEY: options.apiKey,\n    SHOPIFY_API_SECRET: options.apiSecret,\n    HOST: options.hostname,\n    // SERVER_PORT is the convention Artisan uses\n    PORT: `${options.backendPort}`,\n    SERVER_PORT: `${options.backendPort}`,\n    BACKEND_PORT: `${options.backendPort}`,\n    SCOPES: options.scopes,\n    NODE_ENV: `development`,\n  }\n\n  return {\n    prefix: web.configuration.type,\n    action: async (stdout: Writable, stderr: Writable, signal: error.AbortSignal) => {\n      await system.exec(cmd, args, {\n        cwd: web.directory,\n        stdout,\n        stderr,\n        signal,\n        env: {\n          ...process.env,\n          ...env,\n        },\n      })\n    },\n  }\n}\n\nasync function devExtensionsTarget(\n  app: App,\n  apiKey: string,\n  url: string,\n  storeFqdn: string,\n  subscriptionProductUrl?: string,\n  checkoutCartUrl?: string,\n): Promise<ReverseHTTPProxyTarget> {\n  const cartUrl = await buildCartURLIfNeeded(app.extensions.ui, storeFqdn, checkoutCartUrl)\n  return {\n    logPrefix: 'extensions',\n    pathPrefix: '/extensions',\n    action: async (stdout: Writable, stderr: Writable, signal: error.AbortSignal, port: number) => {\n      await devExtensions({\n        app,\n        extensions: app.extensions.ui,\n        stdout,\n        stderr,\n        signal,\n        url,\n        port,\n        storeFqdn,\n        apiKey,\n        cartUrl,\n        subscriptionProductUrl,\n      })\n    },\n  }\n}\n\n/**\n * To prepare Checkout UI Extensions for dev'ing we need to retrieve a valid product variant ID\n * @param extensions {UIExtension[]} - The UI Extensions to dev\n * @param store {string} - The store FQDN\n */\nasync function buildCartURLIfNeeded(extensions: UIExtension[], store: string, checkoutCartUrl?: string) {\n  const hasUIExtension = extensions.map((ext) => ext.type).includes('checkout_ui_extension')\n  if (!hasUIExtension) return undefined\n  if (checkoutCartUrl) return checkoutCartUrl\n  const variantId = await fetchProductVariant(store)\n  return `/cart/${variantId}:1`\n}\n\nexport default dev\n"]}