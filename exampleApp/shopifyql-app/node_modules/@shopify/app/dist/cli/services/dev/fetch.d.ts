import { Organization, OrganizationApp, OrganizationStore } from '../../models/organization.js';
import { api, error } from '@shopify/cli-kit';
export declare const NoOrgError: (organizationId?: string) => error.Abort;
export interface FetchResponse {
    organization: Organization;
    apps: OrganizationApp[];
    stores: OrganizationStore[];
}
export declare function fetchAppExtensionRegistrations({ token, apiKey, }: {
    token: string;
    apiKey: string;
}): Promise<api.graphql.AllAppExtensionRegistrationsQuerySchema>;
/**
 * Fetch all organizations the user belongs to
 * If the user doesn't belong to any org, throw an error
 * @param token {string} Token to access partners API
 * @returns {Promise<Organization[]>} List of organizations
 */
export declare function fetchOrganizations(token: string): Promise<api.graphql.AllOrganizationsQuerySchemaOrganization[]>;
/**
 * Fetch all apps and stores for the given organization
 * @param orgId {string} Organization ID
 * @param token {string} Token to access partners API
 * @returns {Promise<FetchResponse>} Current organization details and list of apps and stores
 */
export declare function fetchOrgAndApps(orgId: string, token: string): Promise<FetchResponse>;
export declare function fetchAppFromApiKey(apiKey: string, token: string): Promise<OrganizationApp | undefined>;
export declare function fetchOrgFromId(id: string, token: string): Promise<Organization | undefined>;
export declare function fetchAllStores(orgId: string, token: string): Promise<OrganizationStore[]>;
